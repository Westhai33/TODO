# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: APIService API
    description: APIService для управления пользователями и задачами
    version: 0.0.1
paths:
    /tasks:
        get:
            tags:
                - APIService
            operationId: APIService_GetAllTasks
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllTasksResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - APIService
            description: '------------- Tasks -------------'
            operationId: APIService_CreateTask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /tasks/{taskId}:
        get:
            tags:
                - APIService
            operationId: APIService_GetTask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - APIService
            operationId: APIService_UpdateTask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - APIService
            operationId: APIService_DeleteTask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users:
        get:
            tags:
                - APIService
            operationId: APIService_GetAllUsers
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - APIService
            description: '------------- Users -------------'
            operationId: APIService_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/{userId}:
        get:
            tags:
                - APIService
            operationId: APIService_GetUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - APIService
            operationId: APIService_UpdateUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - APIService
            operationId: APIService_DeleteUser
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateTaskRequest:
            required:
                - userId
                - title
                - note
            type: object
            properties:
                userId:
                    type: string
                title:
                    type: string
                note:
                    type: string
            description: Task Messages
        CreateTaskResponse:
            type: object
            properties:
                taskId:
                    type: string
                message:
                    type: string
        CreateUserRequest:
            required:
                - username
            type: object
            properties:
                username:
                    type: string
            description: User Messages
        CreateUserResponse:
            type: object
            properties:
                userId:
                    type: string
                message:
                    type: string
        GetAllTasksResponse:
            type: object
            properties:
                tasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/Task'
        GetAllUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        GetTaskResponse:
            type: object
            properties:
                taskId:
                    type: string
                userId:
                    type: string
                title:
                    type: string
                note:
                    type: string
                done:
                    type: boolean
                createdAt:
                    type: string
                updatedAt:
                    type: string
        GetUserResponse:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                createdAt:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Task:
            type: object
            properties:
                taskId:
                    type: string
                userId:
                    type: string
                title:
                    type: string
                note:
                    type: string
                done:
                    type: boolean
                createdAt:
                    type: string
                updatedAt:
                    type: string
        UpdateTaskRequest:
            required:
                - taskId
                - title
                - note
                - done
            type: object
            properties:
                taskId:
                    type: string
                title:
                    type: string
                note:
                    type: string
                done:
                    type: boolean
        UpdateTaskResponse:
            type: object
            properties:
                message:
                    type: string
        UpdateUserRequest:
            required:
                - userId
                - username
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
        UpdateUserResponse:
            type: object
            properties:
                message:
                    type: string
        User:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                createdAt:
                    type: string
tags:
    - name: APIService
